{"ast":null,"code":"import { names } from \"./emailTemplates\";\nimport { simpleDomains, rareDomains, unicDomains } from \"./domainTemplates\";\nimport { newsTask, domainTask, hostingTask, designTask, imageTasks, videoTasks, smmTasks } from \"./rialtoTemplates\";\nconst tasks = [...newsTask, ...domainTask, ...hostingTask, ...designTask, ...imageTasks, ...videoTasks, ...smmTasks];\nconst domains = [...simpleDomains, ...rareDomains, ...unicDomains];\nexport function rand(a, b) {\n  return Math.floor(Math.random() * (b - a + 1) + a);\n}\nexport const generatenName = () => {\n  return names[Math.floor(Math.random() * names.length)];\n};\nexport const generateDomain = () => {\n  return domains[Math.floor(Math.random() * domains.length)];\n};\nexport const generateRialtos = () => {\n  const rialtos = [];\n  for (let i = 0; i < 8; i++) {\n    const task = tasks[Math.floor(Math.random() * tasks.length)];\n    const isDomain = domainTask.includes(task);\n    const isDesigner = designTask.some(t => t === task);\n    const isVideo = videoTasks.some(t => t === task);\n    const isSmm = smmTasks.some(t => t === task);\n    const isCopywiter = ('topic' in task);\n    const name = generatenName();\n    const work = isDesigner ? 'Дизайнер' : isVideo ? 'Видео монтажер' : isSmm ? 'SMM-мастер' : isCopywiter ? 'Копирайтер' : isDomain ? 'SEO-разработчик' : 'WEB-программист';\n    rialtos.push({\n      name: name,\n      price: rand(0, 100),\n      age: rand(14, 80),\n      work: work,\n      domain: isDomain ? generateDomain() : '',\n      ...task\n    });\n  }\n  return rialtos;\n};","map":{"version":3,"names":["names","simpleDomains","rareDomains","unicDomains","newsTask","domainTask","hostingTask","designTask","imageTasks","videoTasks","smmTasks","tasks","domains","rand","a","b","Math","floor","random","generatenName","length","generateDomain","generateRialtos","rialtos","i","task","isDomain","includes","isDesigner","some","t","isVideo","isSmm","isCopywiter","name","work","push","price","age","domain"],"sources":["C:/Users/smerd/Desktop/Adtension/src/scripts/rialtoGenerate.ts"],"sourcesContent":["import { Rialto as RialtoInterface, Banner as BannerInterface, } from './types';\r\nimport { greetings, farewells, requests, names } from \"./emailTemplates\";\r\nimport { simpleDomains, rareDomains, unicDomains, } from \"./domainTemplates\";\r\nimport { newsTask, domainTask, hostingTask, designTask, imageTasks, videoTasks, smmTasks, } from \"./rialtoTemplates\";\r\n\r\nconst tasks = [...newsTask, ...domainTask, ...hostingTask, ...designTask, ...imageTasks, ...videoTasks, ...smmTasks, ];\r\nconst domains = [...simpleDomains, ...rareDomains, ...unicDomains];\r\n\r\nexport function rand(a: number, b: number): number {\r\n    return Math.floor(Math.random() * (b - a + 1) + a);\r\n}\r\n\r\nexport const generatenName = () => {\r\n    return names[Math.floor(Math.random() * names.length)];\r\n};\r\n\r\nexport const generateDomain = () => {\r\n    return domains[Math.floor(Math.random() * domains.length)];\r\n};\r\n\r\nexport const generateRialtos = (): Array<RialtoInterface> => {\r\n    const rialtos = [];\r\n    for (let i = 0; i < 8; i++) {\r\n        const task = tasks[Math.floor(Math.random() * tasks.length)];\r\n        const isDomain = domainTask.includes(task);\r\n        const isDesigner = designTask.some(t => t === task);\r\n        const isVideo = videoTasks.some(t => t === task);\r\n        const isSmm = smmTasks.some(t => t === task);\r\n        const isCopywiter = 'topic' in task;\r\n        const name = generatenName();\r\n        const work =\r\n            isDesigner ? 'Дизайнер'\r\n            : isVideo ? 'Видео монтажер'\r\n            : isSmm ? 'SMM-мастер'\r\n            : isCopywiter ? 'Копирайтер'\r\n            : isDomain ? 'SEO-разработчик' \r\n            : 'WEB-программист';\r\n\r\n        rialtos.push({\r\n            name: name,\r\n            price: rand(0, 100),\r\n            age:   rand(14, 80),\r\n            work: work,\r\n            domain: isDomain ? generateDomain() : '',\r\n            ...task,\r\n        })\r\n    }\r\n    return rialtos;\r\n};"],"mappings":"AACA,SAAyCA,KAAK,QAAQ,kBAAkB;AACxE,SAASC,aAAa,EAAEC,WAAW,EAAEC,WAAW,QAAS,mBAAmB;AAC5E,SAASC,QAAQ,EAAEC,UAAU,EAAEC,WAAW,EAAEC,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAEC,QAAQ,QAAS,mBAAmB;AAEpH,MAAMC,KAAK,GAAG,CAAC,GAAGP,QAAQ,EAAE,GAAGC,UAAU,EAAE,GAAGC,WAAW,EAAE,GAAGC,UAAU,EAAE,GAAGC,UAAU,EAAE,GAAGC,UAAU,EAAE,GAAGC,QAAQ,CAAG;AACtH,MAAME,OAAO,GAAG,CAAC,GAAGX,aAAa,EAAE,GAAGC,WAAW,EAAE,GAAGC,WAAW,CAAC;AAElE,OAAO,SAASU,IAAIA,CAACC,CAAS,EAAEC,CAAS,EAAU;EAC/C,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIH,CAAC,GAAGD,CAAC,GAAG,CAAC,CAAC,GAAGA,CAAC,CAAC;AACtD;AAEA,OAAO,MAAMK,aAAa,GAAGA,CAAA,KAAM;EAC/B,OAAOnB,KAAK,CAACgB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGlB,KAAK,CAACoB,MAAM,CAAC,CAAC;AAC1D,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAChC,OAAOT,OAAO,CAACI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,OAAO,CAACQ,MAAM,CAAC,CAAC;AAC9D,CAAC;AAED,OAAO,MAAME,eAAe,GAAGA,CAAA,KAA8B;EACzD,MAAMC,OAAO,GAAG,EAAE;EAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACxB,MAAMC,IAAI,GAAGd,KAAK,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGP,KAAK,CAACS,MAAM,CAAC,CAAC;IAC5D,MAAMM,QAAQ,GAAGrB,UAAU,CAACsB,QAAQ,CAACF,IAAI,CAAC;IAC1C,MAAMG,UAAU,GAAGrB,UAAU,CAACsB,IAAI,CAACC,CAAC,IAAIA,CAAC,KAAKL,IAAI,CAAC;IACnD,MAAMM,OAAO,GAAGtB,UAAU,CAACoB,IAAI,CAACC,CAAC,IAAIA,CAAC,KAAKL,IAAI,CAAC;IAChD,MAAMO,KAAK,GAAGtB,QAAQ,CAACmB,IAAI,CAACC,CAAC,IAAIA,CAAC,KAAKL,IAAI,CAAC;IAC5C,MAAMQ,WAAW,IAAG,OAAO,IAAIR,IAAI;IACnC,MAAMS,IAAI,GAAGf,aAAa,CAAC,CAAC;IAC5B,MAAMgB,IAAI,GACNP,UAAU,GAAG,UAAU,GACrBG,OAAO,GAAG,gBAAgB,GAC1BC,KAAK,GAAG,YAAY,GACpBC,WAAW,GAAG,YAAY,GAC1BP,QAAQ,GAAG,iBAAiB,GAC5B,iBAAiB;IAEvBH,OAAO,CAACa,IAAI,CAAC;MACTF,IAAI,EAAEA,IAAI;MACVG,KAAK,EAAExB,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC;MACnByB,GAAG,EAAIzB,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC;MACnBsB,IAAI,EAAEA,IAAI;MACVI,MAAM,EAAEb,QAAQ,GAAGL,cAAc,CAAC,CAAC,GAAG,EAAE;MACxC,GAAGI;IACP,CAAC,CAAC;EACN;EACA,OAAOF,OAAO;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}