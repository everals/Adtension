{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smerd\\\\Desktop\\\\Adtension\\\\src\\\\pages\\\\Site.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Banner from \"../components/Banner\";\nimport Link from \"../components/Link\";\nimport Button from \"../components/Button\";\nimport News from \"../components/News\";\nimport Logo from \"../components/Logo\";\nimport DetailsBanner from \"../components/DetailsBanner\";\nimport Bot from \"../components/Bot\";\nimport { setBots as setBotsAction, setBalance as setBalanceAction, updateBannerX as updateBannerXAction, updateBannerY as updateBannerYAction, updateBannerWidth as updateBannerWidthAction, updateBannerHeight as updateBannerHeightAction } from '../redux/user';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet id = 0;\nfunction isCoordinateInsideAdBlock(x, y) {\n  const adBlocks = document.querySelectorAll('.ad');\n  if (!adBlocks) {\n    return false;\n  }\n  for (const adBlock of adBlocks) {\n    const rect = adBlock.getBoundingClientRect();\n    if (x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom) {\n      if (adBlock instanceof HTMLElement) {\n        return parseInt(adBlock.dataset.price || '0') || 0;\n      } else {\n        return 0;\n      }\n    }\n  }\n  return false;\n}\nfunction Site() {\n  _s();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const bots = user.bots;\n  const banners = user.banners;\n  const setBots = payload => dispatch(setBotsAction(payload));\n  const setBalance = payload => dispatch(setBalanceAction(payload));\n  const [detailsVisibleIndex, setDetailsVisibleIndex] = useState(null);\n  const [editBannerIndex, setEditBannerIndex] = useState(null);\n  const updateBannerX = payload => dispatch(updateBannerXAction(payload));\n  const updateBannerY = payload => dispatch(updateBannerYAction(payload));\n  const updateBannerWidth = payload => dispatch(updateBannerWidthAction(payload));\n  const updateBannerHeight = payload => dispatch(updateBannerHeightAction(payload));\n  const deepCopy = obj => JSON.parse(JSON.stringify(obj));\n  const showDetails = index => {\n    if (editBannerIndex !== null) {\n      return;\n    }\n    setDetailsVisibleIndex(index);\n  };\n  const hideDetails = () => {\n    setDetailsVisibleIndex(null);\n    setEditBannerIndex(null);\n  };\n  const editBanner = index => {\n    setEditBannerIndex(index);\n  };\n  const moveBots = () => {\n    const newBots = deepCopy(bots);\n    for (let bot of newBots) {\n      const changeVector = () => {\n        bot.vectorY = Math.random() * 2 - 1;\n        bot.vectorX = Math.random() * 2 - 1;\n        if (bot.x < 0) {\n          bot.vectorX = Math.abs(bot.vectorX);\n        }\n        if (bot.y < 200) {\n          bot.vectorY = Math.abs(bot.vectorX);\n        }\n        if (bot.x > 1800) {\n          bot.vectorX = -Math.abs(bot.vectorX);\n        }\n        if (bot.y > 1000) {\n          bot.vectorY = -Math.abs(bot.vectorX);\n        }\n      };\n      bot.x += bot.vectorX * 30;\n      bot.y += bot.vectorY * 30;\n      if (Math.random() < 0.02) {\n        bot.isClick = !bot.isClick;\n        if (bot.isClick) {\n          const sum = isCoordinateInsideAdBlock(bot.x, bot.y);\n          if (sum) {\n            setBalance(user.anal.balance + sum);\n          }\n        }\n      }\n      if (Math.random() < 0.1 || bot.x < 0 || bot.y < 200 || bot.x > 1800 || bot.y > 1000) {\n        changeVector();\n      }\n    }\n    if (Math.random() < 0.01 && bots.length < user.anal.hostCount) {\n      newBots.push({\n        x: 200,\n        y: 200,\n        xVector: 1,\n        yVector: 1,\n        isClick: false,\n        id: id++\n      });\n    }\n    setBots(newBots);\n  };\n  useEffect(() => {\n    const moveInterval = setInterval(() => {\n      moveBots();\n    }, 100);\n    return () => {\n      clearInterval(moveInterval);\n    };\n  }, [bots, setBots]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tab relative\",\n    children: [bots.map(bot => /*#__PURE__*/_jsxDEV(Bot, {\n      ...bot\n    }, bot.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }, this)), banners.filter(ban => \"isBanner\" in ban).map((banner, index) => /*#__PURE__*/_jsxDEV(Banner, {\n      ...banner,\n      onClick: showDetails,\n      isEdit: editBannerIndex === banner.bannerId,\n      index: banner.bannerId,\n      onUpdateBannerX: value => updateBannerX({\n        index: banner.bannerId,\n        value\n      }),\n      onUpdateBannerY: value => updateBannerY({\n        index: banner.bannerId,\n        value\n      }),\n      onUpdateBannerWidth: value => updateBannerWidth({\n        index: banner.bannerId,\n        value\n      }),\n      onUpdateBannerHeight: value => updateBannerHeight({\n        index: banner.bannerId,\n        value\n      })\n    }, banner.bannerId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }, this)), banners.filter(link => \"isLink\" in link).map((link, index) => /*#__PURE__*/_jsxDEV(Link, {\n      ...link,\n      onClick: showDetails,\n      isEdit: editBannerIndex === link.bannerId,\n      index: link.bannerId,\n      onUpdateBannerX: value => updateBannerX({\n        index: link.bannerId,\n        value\n      }),\n      onUpdateBannerY: value => updateBannerY({\n        index: link.bannerId,\n        value\n      }),\n      onUpdateBannerWidth: value => updateBannerWidth({\n        index: link.bannerId,\n        value\n      }),\n      onUpdateBannerHeight: value => updateBannerHeight({\n        index: link.bannerId,\n        value\n      })\n    }, link.bannerId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }, this)), banners.filter(button => \"isButton\" in button).map((button, index) => /*#__PURE__*/_jsxDEV(Button, {\n      ...button,\n      onClick: showDetails,\n      isEdit: editBannerIndex === button.bannerId,\n      index: button.bannerId,\n      onUpdateBannerX: value => updateBannerX({\n        index: button.bannerId,\n        value\n      }),\n      onUpdateBannerY: value => updateBannerY({\n        index: button.bannerId,\n        value\n      }),\n      onUpdateBannerWidth: value => updateBannerWidth({\n        index: button.bannerId,\n        value\n      }),\n      onUpdateBannerHeight: value => updateBannerHeight({\n        index: button.bannerId,\n        value\n      })\n    }, button.bannerId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }, this)), banners.filter(news => \"isNews\" in news).map((news, index) => /*#__PURE__*/_jsxDEV(News, {\n      ...news,\n      onClick: showDetails,\n      isEdit: editBannerIndex === news.bannerId,\n      index: news.bannerId,\n      onUpdateBannerX: value => updateBannerX({\n        index: news.bannerId,\n        value\n      }),\n      onUpdateBannerY: value => updateBannerY({\n        index: news.bannerId,\n        value\n      }),\n      onUpdateBannerWidth: value => updateBannerWidth({\n        index: news.bannerId,\n        value\n      }),\n      onUpdateBannerHeight: value => updateBannerHeight({\n        index: news.bannerId,\n        value\n      })\n    }, news.bannerId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }, this)), banners.filter(logo => \"isLogo\" in logo).map((logo, index) => /*#__PURE__*/_jsxDEV(Logo, {\n      ...logo,\n      onClick: showDetails,\n      isEdit: editBannerIndex === logo.bannerId,\n      index: logo.bannerId,\n      onUpdateBannerX: value => updateBannerX({\n        index: logo.bannerId,\n        value\n      }),\n      onUpdateBannerY: value => updateBannerY({\n        index: logo.bannerId,\n        value\n      }),\n      onUpdateBannerWidth: value => updateBannerWidth({\n        index: logo.bannerId,\n        value\n      }),\n      onUpdateBannerHeight: value => updateBannerHeight({\n        index: logo.bannerId,\n        value\n      })\n    }, logo.bannerId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }, this)), detailsVisibleIndex !== null ? /*#__PURE__*/_jsxDEV(DetailsBanner, {\n      onHide: hideDetails,\n      onEdit: editBanner,\n      ...banners[detailsVisibleIndex],\n      index: detailsVisibleIndex,\n      isEdit: editBannerIndex !== null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n}\n_s(Site, \"OwxoMCDJ/88QucjEkQ42+SLb69c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Site;\nexport default Site;\nvar _c;\n$RefreshReg$(_c, \"Site\");","map":{"version":3,"names":["React","useEffect","useState","Banner","Link","Button","News","Logo","DetailsBanner","Bot","setBots","setBotsAction","setBalance","setBalanceAction","updateBannerX","updateBannerXAction","updateBannerY","updateBannerYAction","updateBannerWidth","updateBannerWidthAction","updateBannerHeight","updateBannerHeightAction","useSelector","useDispatch","jsxDEV","_jsxDEV","id","isCoordinateInsideAdBlock","x","y","adBlocks","document","querySelectorAll","adBlock","rect","getBoundingClientRect","left","right","top","bottom","HTMLElement","parseInt","dataset","price","Site","_s","dispatch","user","state","bots","banners","payload","detailsVisibleIndex","setDetailsVisibleIndex","editBannerIndex","setEditBannerIndex","deepCopy","obj","JSON","parse","stringify","showDetails","index","hideDetails","editBanner","moveBots","newBots","bot","changeVector","vectorY","Math","random","vectorX","abs","isClick","sum","anal","balance","length","hostCount","push","xVector","yVector","moveInterval","setInterval","clearInterval","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","filter","ban","banner","onClick","isEdit","bannerId","onUpdateBannerX","value","onUpdateBannerY","onUpdateBannerWidth","onUpdateBannerHeight","link","button","news","logo","onHide","onEdit","_c","$RefreshReg$"],"sources":["C:/Users/smerd/Desktop/Adtension/src/pages/Site.tsx"],"sourcesContent":["import React, { useEffect, useState, } from 'react';\r\nimport Banner from \"../components/Banner\";\r\nimport Link from \"../components/Link\";\r\nimport Button from \"../components/Button\";\r\nimport News from \"../components/News\";\r\nimport Logo from \"../components/Logo\";\r\n\r\nimport DetailsBanner from \"../components/DetailsBanner\";\r\nimport Bot from \"../components/Bot\";\r\nimport { setEmail as setEmailAction, setBots as setBotsAction, setBalance as setBalanceAction, updateBannerX as updateBannerXAction, updateBannerY as updateBannerYAction, updateBannerWidth as updateBannerWidthAction, updateBannerHeight as updateBannerHeightAction } from '../redux/user';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\nimport { Banner as BannerInterface, Bot as BotInterface, Button as ButtonInterface, Link as LinkInterface, Logo as LogoInterface,  News as NewsInterface, } from '../scripts/types';\r\n\r\nlet id = 0;\r\n\r\nfunction isCoordinateInsideAdBlock(x: number, y: number): false | number {\r\n    const adBlocks = document.querySelectorAll('.ad');\r\n    if (!adBlocks) {\r\n        return false;\r\n    }\r\n    for (const adBlock of adBlocks) {\r\n        const rect = adBlock.getBoundingClientRect();\r\n        if (\r\n            x >= rect.left &&\r\n            x <= rect.right &&\r\n            y >= rect.top &&\r\n            y <= rect.bottom\r\n        ) {\r\n            if (adBlock instanceof HTMLElement) {\r\n                return parseInt(adBlock.dataset.price || '0') || 0;\r\n            } else {\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction Site() {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector((state: RootState) => state.user);\r\n    const bots = user.bots;\r\n    const banners = user.banners;\r\n    const setBots = (payload: Array<BotInterface>) => dispatch(setBotsAction(payload));\r\n    const setBalance = (payload: number) => dispatch(setBalanceAction(payload));\r\n    const [detailsVisibleIndex, setDetailsVisibleIndex] = useState<number | null>(null);\r\n    const [editBannerIndex, setEditBannerIndex] = useState<number | null>(null);\r\n    const updateBannerX = (payload: { index: number, value: number }) => dispatch(updateBannerXAction(payload));\r\n    const updateBannerY = (payload: { index: number, value: number }) => dispatch(updateBannerYAction(payload));\r\n    const updateBannerWidth = (payload: { index: number, value: number }) => dispatch(updateBannerWidthAction(payload));\r\n    const updateBannerHeight = (payload: { index: number, value: number }) => dispatch(updateBannerHeightAction(payload));\r\n\r\n    const deepCopy = (obj:any) =>  JSON.parse(JSON.stringify(obj)) as typeof obj;\r\n\r\n    const showDetails = (index: number) => {\r\n        if (editBannerIndex !== null) {\r\n            return;\r\n        }\r\n        setDetailsVisibleIndex(index);\r\n    };\r\n\r\n    const hideDetails = () => {\r\n        setDetailsVisibleIndex(null);\r\n        setEditBannerIndex(null);\r\n    };\r\n\r\n    const editBanner = (index: number | null) => {\r\n        setEditBannerIndex(index);\r\n    };\r\n\r\n    const moveBots = () => {\r\n        const newBots = deepCopy(bots);\r\n        for (let bot of newBots) {\r\n            const changeVector = () => {\r\n                bot.vectorY = Math.random() * 2 - 1;\r\n                bot.vectorX = Math.random() * 2 - 1;\r\n                if (bot.x < 0) {\r\n                    bot.vectorX = Math.abs(bot.vectorX);\r\n                }\r\n                if (bot.y < 200) {\r\n                    bot.vectorY = Math.abs(bot.vectorX);\r\n                }\r\n                if (bot.x > 1800) {\r\n                    bot.vectorX = -Math.abs(bot.vectorX);\r\n                }\r\n                if (bot.y > 1000) {\r\n                    bot.vectorY = -Math.abs(bot.vectorX);\r\n                }\r\n            }\r\n\r\n            bot.x += bot.vectorX * 30;\r\n            bot.y += bot.vectorY * 30;\r\n\r\n            if (Math.random() < 0.02) {\r\n                bot.isClick = !bot.isClick;\r\n                if (bot.isClick) {\r\n                    const sum = isCoordinateInsideAdBlock(bot.x, bot.y)\r\n                    if (sum) {\r\n                        setBalance(user.anal.balance + sum);\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if (Math.random() < 0.1 || bot.x < 0 || bot.y < 200  || bot.x > 1800 || bot.y > 1000) {\r\n                changeVector();\r\n            }\r\n            \r\n        }\r\n        if (Math.random() < 0.01 && bots.length < user.anal.hostCount) {\r\n            newBots.push(\r\n                {\r\n                    x: 200,\r\n                    y: 200,\r\n                    xVector: 1,\r\n                    yVector: 1,\r\n                    isClick: false,\r\n                    id: id++,\r\n                },\r\n            );\r\n        }\r\n        setBots(newBots);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const moveInterval = setInterval(() => {\r\n            moveBots();\r\n        }, 100);\r\n\r\n        return () => {\r\n            clearInterval(moveInterval);\r\n        };\r\n    }, [bots, setBots]);\r\n\r\n    return (\r\n        <div className=\"tab relative\">\r\n            {\r\n                bots.map((bot) => (\r\n                    <Bot\r\n                        key={bot.id}\r\n                        {...bot}\r\n                    />\r\n                ))\r\n            }\r\n\r\n            {\r\n                banners.filter((ban): ban is BannerInterface => \"isBanner\" in ban).map((banner, index) => (\r\n                    <Banner\r\n                        key={banner.bannerId}\r\n                        {...banner}\r\n                        onClick={showDetails}\r\n                        isEdit={editBannerIndex === banner.bannerId}\r\n                        index={banner.bannerId}\r\n                        onUpdateBannerX={value => updateBannerX({index: banner.bannerId, value})}\r\n                        onUpdateBannerY={value => updateBannerY({index: banner.bannerId, value})}\r\n                        onUpdateBannerWidth={value => updateBannerWidth({index: banner.bannerId, value})}\r\n                        onUpdateBannerHeight={value => updateBannerHeight({index: banner.bannerId, value})}\r\n                    />\r\n                ))\r\n            }\r\n\r\n            {\r\n                banners.filter((link): link is LinkInterface => \"isLink\" in link).map((link, index) => (\r\n                    <Link\r\n                        key={link.bannerId}\r\n                        {...link}\r\n                        onClick={showDetails}\r\n                        isEdit={editBannerIndex === link.bannerId}\r\n                        index={link.bannerId}\r\n                        onUpdateBannerX={value => updateBannerX({index: link.bannerId, value})}\r\n                        onUpdateBannerY={value => updateBannerY({index: link.bannerId, value})}\r\n                        onUpdateBannerWidth={value => updateBannerWidth({index: link.bannerId, value})}\r\n                        onUpdateBannerHeight={value => updateBannerHeight({index: link.bannerId, value})}\r\n                    />\r\n                ))\r\n            }\r\n\r\n            {\r\n                banners.filter((button): button is ButtonInterface => \"isButton\" in button).map((button, index) => (\r\n                    <Button\r\n                        key={button.bannerId}\r\n                        {...button}\r\n                        onClick={showDetails}\r\n                        isEdit={editBannerIndex === button.bannerId}\r\n                        index={button.bannerId}\r\n                        onUpdateBannerX={value => updateBannerX({index: button.bannerId, value})}\r\n                        onUpdateBannerY={value => updateBannerY({index: button.bannerId, value})}\r\n                        onUpdateBannerWidth={value => updateBannerWidth({index: button.bannerId, value})}\r\n                        onUpdateBannerHeight={value => updateBannerHeight({index: button.bannerId, value})}\r\n                    />\r\n                ))\r\n            }\r\n\r\n\r\n            {\r\n                banners.filter((news): news is NewsInterface => \"isNews\" in news).map((news, index) => (\r\n                    <News\r\n                        key={news.bannerId}\r\n                        {...news}\r\n                        onClick={showDetails}\r\n                        isEdit={editBannerIndex === news.bannerId}\r\n                        index={news.bannerId}\r\n                        onUpdateBannerX={value => updateBannerX({index: news.bannerId, value})}\r\n                        onUpdateBannerY={value => updateBannerY({index: news.bannerId, value})}\r\n                        onUpdateBannerWidth={value => updateBannerWidth({index: news.bannerId, value})}\r\n                        onUpdateBannerHeight={value => updateBannerHeight({index: news.bannerId, value})}\r\n                    />\r\n                ))\r\n            }\r\n\r\n\r\n            {\r\n                banners.filter((logo): logo is LogoInterface => \"isLogo\" in logo).map((logo, index) => (\r\n                    <Logo\r\n                        key={logo.bannerId}\r\n                        {...logo}\r\n                        onClick={showDetails}\r\n                        isEdit={editBannerIndex === logo.bannerId}\r\n                        index={logo.bannerId}\r\n                        onUpdateBannerX={value => updateBannerX({index: logo.bannerId, value})}\r\n                        onUpdateBannerY={value => updateBannerY({index: logo.bannerId, value})}\r\n                        onUpdateBannerWidth={value => updateBannerWidth({index: logo.bannerId, value})}\r\n                        onUpdateBannerHeight={value => updateBannerHeight({index: logo.bannerId, value})}\r\n                    />\r\n                ))\r\n            }\r\n\r\n\r\n            {\r\n                detailsVisibleIndex !== null ?\r\n                <DetailsBanner\r\n                    onHide={hideDetails}\r\n                    onEdit={editBanner}\r\n                    {...banners[detailsVisibleIndex]}\r\n                    index={detailsVisibleIndex}\r\n                    isEdit={editBannerIndex !== null}\r\n                />\r\n                :\r\n                null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Site;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}