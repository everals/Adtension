{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smerd\\\\Desktop\\\\Adtension\\\\src\\\\pages\\\\Site.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Banner from \"../components/Banner\";\nimport Link from \"../components/Link\";\nimport Button from \"../components/Button\";\nimport News from \"../components/News\";\nimport Logo from \"../components/Logo\";\nimport DetailsBanner from \"../components/DetailsBanner\";\nimport Bot from \"../components/Bot\";\nimport { setBots as setBotsAction } from '../redux/user';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet id = 0;\nfunction Site() {\n  _s();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const bots = user.bots;\n  const banners = user.banners;\n  const setBots = payload => dispatch(setBotsAction(payload));\n  const [detailsVisibleIndex, setDetailsVisibleIndex] = useState(null);\n  const [editBannerIndex, setEditBannerIndex] = useState(null);\n  const deepCopy = obj => JSON.parse(JSON.stringify(obj));\n  const showDetails = index => {\n    if (editBannerIndex !== null) {\n      return;\n    }\n    setDetailsVisibleIndex(index);\n  };\n  const hideDetails = () => {\n    setDetailsVisibleIndex(null);\n    setEditBannerIndex(null);\n  };\n  const editBanner = index => {\n    setEditBannerIndex(index);\n  };\n  const moveBots = () => {\n    const newBots = deepCopy(bots);\n    for (let bot of newBots) {\n      const changeVector = () => {\n        bot.vectorY = Math.random() * 2 - 1;\n        bot.vectorX = Math.random() * 2 - 1;\n        if (bot.x < 0) {\n          bot.vectorX = Math.abs(bot.vectorX);\n        }\n        if (bot.y < 200) {\n          bot.vectorY = Math.abs(bot.vectorX);\n        }\n        if (bot.x > 1800) {\n          bot.vectorX = -Math.abs(bot.vectorX);\n        }\n        if (bot.y > 1000) {\n          bot.vectorY = -Math.abs(bot.vectorX);\n        }\n      };\n      bot.x += bot.vectorX * 30;\n      bot.y += bot.vectorY * 30;\n      if (Math.random() < 0.02) {\n        bot.isClick = !bot.isClick;\n      }\n      if (Math.random() < 0.1 || bot.x < 0 || bot.y < 200 || bot.x > 1800 || bot.y > 1000) {\n        changeVector();\n      }\n    }\n    if (Math.random() < 0.01 && bots.length < user.anal.hostCount) {\n      newBots.push({\n        x: 200,\n        y: 200,\n        xVector: 1,\n        yVector: 1,\n        isClick: false,\n        id: id++\n      });\n    }\n    setBots(newBots);\n  };\n  useEffect(() => {\n    const moveInterval = setInterval(() => {\n      moveBots();\n    }, 100);\n    return () => {\n      clearInterval(moveInterval);\n    };\n  }, [bots, setBots]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tab relative\",\n    children: [bots.map(bot => /*#__PURE__*/_jsxDEV(Bot, {\n      ...bot\n    }, bot.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }, this)), banners.filter(ban => \"isBanner\" in ban).map((banner, index) => /*#__PURE__*/_jsxDEV(Banner, {\n      ...banner,\n      onClick: showDetails,\n      isEdit: editBannerIndex === banner.bannerId,\n      index: banner.bannerId\n    }, banner.bannerId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }, this)), banners.filter(link => \"isLink\" in link).map((link, index) => /*#__PURE__*/_jsxDEV(Link, {\n      ...link,\n      onClick: showDetails,\n      isEdit: editBannerIndex === link.bannerId,\n      index: link.bannerId\n    }, link.bannerId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }, this)), banners.filter(button => \"isButton\" in button).map((button, index) => /*#__PURE__*/_jsxDEV(Button, {\n      ...button,\n      onClick: showDetails,\n      isEdit: editBannerIndex === button.bannerId,\n      index: button.bannerId\n    }, button.bannerId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }, this)), banners.filter(news => \"isNews\" in news).map((news, index) => /*#__PURE__*/_jsxDEV(News, {\n      ...news,\n      onClick: showDetails,\n      isEdit: editBannerIndex === news.bannerId,\n      index: news.bannerId\n    }, news.bannerId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }, this)), banners.filter(logo => \"isLogo\" in logo).map((logo, index) => /*#__PURE__*/_jsxDEV(Logo, {\n      ...logo,\n      onClick: showDetails,\n      isEdit: editBannerIndex === logo.bannerId,\n      index: logo.bannerId\n    }, logo.bannerId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }, this)), detailsVisibleIndex !== null ? /*#__PURE__*/_jsxDEV(DetailsBanner, {\n      onHide: hideDetails,\n      onEdit: editBanner,\n      ...banners[detailsVisibleIndex],\n      index: detailsVisibleIndex,\n      isEdit: editBannerIndex !== null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n_s(Site, \"OwxoMCDJ/88QucjEkQ42+SLb69c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Site;\nexport default Site;\nvar _c;\n$RefreshReg$(_c, \"Site\");","map":{"version":3,"names":["React","useEffect","useState","Banner","Link","Button","News","Logo","DetailsBanner","Bot","setBots","setBotsAction","useSelector","useDispatch","jsxDEV","_jsxDEV","id","Site","_s","dispatch","user","state","bots","banners","payload","detailsVisibleIndex","setDetailsVisibleIndex","editBannerIndex","setEditBannerIndex","deepCopy","obj","JSON","parse","stringify","showDetails","index","hideDetails","editBanner","moveBots","newBots","bot","changeVector","vectorY","Math","random","vectorX","x","abs","y","isClick","length","anal","hostCount","push","xVector","yVector","moveInterval","setInterval","clearInterval","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","filter","ban","banner","onClick","isEdit","bannerId","link","button","news","logo","onHide","onEdit","_c","$RefreshReg$"],"sources":["C:/Users/smerd/Desktop/Adtension/src/pages/Site.tsx"],"sourcesContent":["import React, { useEffect, useState, } from 'react';\r\nimport Banner from \"../components/Banner\";\r\nimport Link from \"../components/Link\";\r\nimport Button from \"../components/Button\";\r\nimport News from \"../components/News\";\r\nimport Logo from \"../components/Logo\";\r\n\r\nimport DetailsBanner from \"../components/DetailsBanner\";\r\nimport Bot from \"../components/Bot\";\r\nimport { setEmail as setEmailAction, setBots as setBotsAction, } from '../redux/user';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\nimport { Banner as BannerInterface, Bot as BotInterface, Button as ButtonInterface, Link as LinkInterface, Logo as LogoInterface,  News as NewsInterface, } from '../scripts/types';\r\n\r\nlet id = 0;\r\n\r\nfunction Site() {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector((state: RootState) => state.user);\r\n    const bots = user.bots;\r\n    const banners = user.banners;\r\n    const setBots = (payload: Array<BotInterface>) => dispatch(setBotsAction(payload));\r\n    const [detailsVisibleIndex, setDetailsVisibleIndex] = useState<number | null>(null);\r\n    const [editBannerIndex, setEditBannerIndex] = useState<number | null>(null);\r\n\r\n    const deepCopy = (obj:any) =>  JSON.parse(JSON.stringify(obj)) as typeof obj;\r\n\r\n    const showDetails = (index: number) => {\r\n        if (editBannerIndex !== null) {\r\n            return;\r\n        }\r\n        setDetailsVisibleIndex(index);\r\n    };\r\n\r\n    const hideDetails = () => {\r\n        setDetailsVisibleIndex(null);\r\n        setEditBannerIndex(null);\r\n    };\r\n\r\n    const editBanner = (index: number | null) => {\r\n        setEditBannerIndex(index);\r\n    };\r\n\r\n    const moveBots = () => {\r\n        const newBots = deepCopy(bots);\r\n        for (let bot of newBots) {\r\n            const changeVector = () => {\r\n                bot.vectorY = Math.random() * 2 - 1;\r\n                bot.vectorX = Math.random() * 2 - 1;\r\n                if (bot.x < 0) {\r\n                    bot.vectorX = Math.abs(bot.vectorX);\r\n                }\r\n                if (bot.y < 200) {\r\n                    bot.vectorY = Math.abs(bot.vectorX);\r\n                }\r\n                if (bot.x > 1800) {\r\n                    bot.vectorX = -Math.abs(bot.vectorX);\r\n                }\r\n                if (bot.y > 1000) {\r\n                    bot.vectorY = -Math.abs(bot.vectorX);\r\n                }\r\n            }\r\n\r\n            bot.x += bot.vectorX * 30;\r\n            bot.y += bot.vectorY * 30;\r\n\r\n            if (Math.random() < 0.02) {\r\n                bot.isClick = !bot.isClick;\r\n            }\r\n            \r\n            if (Math.random() < 0.1 || bot.x < 0 || bot.y < 200  || bot.x > 1800 || bot.y > 1000) {\r\n                changeVector();\r\n            }\r\n            \r\n        }\r\n        if (Math.random() < 0.01 && bots.length < user.anal.hostCount) {\r\n            newBots.push(\r\n                {\r\n                    x: 200,\r\n                    y: 200,\r\n                    xVector: 1,\r\n                    yVector: 1,\r\n                    isClick: false,\r\n                    id: id++,\r\n                },\r\n            );\r\n        }\r\n        setBots(newBots);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const moveInterval = setInterval(() => {\r\n            moveBots();\r\n        }, 100);\r\n\r\n        return () => {\r\n            clearInterval(moveInterval);\r\n        };\r\n    }, [bots, setBots]);\r\n\r\n    return (\r\n        <div className=\"tab relative\">\r\n            {\r\n                bots.map((bot) => (\r\n                    <Bot\r\n                        key={bot.id}\r\n                        {...bot}\r\n                    />\r\n                ))\r\n            }\r\n\r\n            {\r\n                banners.filter((ban): ban is BannerInterface => \"isBanner\" in ban).map((banner, index) => (\r\n                    <Banner\r\n                        key={banner.bannerId}\r\n                        {...banner}\r\n                        onClick={showDetails}\r\n                        isEdit={editBannerIndex === banner.bannerId}\r\n                        index={banner.bannerId}\r\n                    />\r\n                ))\r\n            }\r\n\r\n            {\r\n                banners.filter((link): link is LinkInterface => \"isLink\" in link).map((link, index) => (\r\n                    <Link\r\n                        key={link.bannerId}\r\n                        {...link}\r\n                        onClick={showDetails}\r\n                        isEdit={editBannerIndex === link.bannerId}\r\n                        index={link.bannerId}\r\n                    />\r\n                ))\r\n            }\r\n\r\n            {\r\n                banners.filter((button): button is ButtonInterface => \"isButton\" in button).map((button, index) => (\r\n                    <Button\r\n                        key={button.bannerId}\r\n                        {...button}\r\n                        onClick={showDetails}\r\n                        isEdit={editBannerIndex === button.bannerId}\r\n                        index={button.bannerId}\r\n                    />\r\n                ))\r\n            }\r\n\r\n\r\n            {\r\n                banners.filter((news): news is NewsInterface => \"isNews\" in news).map((news, index) => (\r\n                    <News\r\n                        key={news.bannerId}\r\n                        {...news}\r\n                        onClick={showDetails}\r\n                        isEdit={editBannerIndex === news.bannerId}\r\n                        index={news.bannerId}\r\n                    />\r\n                ))\r\n            }\r\n\r\n\r\n            {\r\n                banners.filter((logo): logo is LogoInterface => \"isLogo\" in logo).map((logo, index) => (\r\n                    <Logo\r\n                        key={logo.bannerId}\r\n                        {...logo}\r\n                        onClick={showDetails}\r\n                        isEdit={editBannerIndex === logo.bannerId}\r\n                        index={logo.bannerId}\r\n                    />\r\n                ))\r\n            }\r\n\r\n\r\n            {\r\n                detailsVisibleIndex !== null ?\r\n                <DetailsBanner\r\n                    onHide={hideDetails}\r\n                    onEdit={editBanner}\r\n                    {...banners[detailsVisibleIndex]}\r\n                    index={detailsVisibleIndex}\r\n                    isEdit={editBannerIndex !== null}\r\n                />\r\n                :\r\n                null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Site;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}