{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smerd\\\\Desktop\\\\Adtension\\\\src\\\\pages\\\\Email.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport EmailItem from \"../components/EmailItem\";\nimport { greetings, farewells, requests, names } from \"../scripts/emailTemplates\";\nimport { bannerList, badBannerList } from \"../scripts/bannerTemplates\";\nimport { setEmail as setEmailAction } from '../redux/user';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst banners = [...bannerList, ...badBannerList];\nfunction generateAdvertisementRequest(mail, owner) {\n  const greeting = greetings[Math.floor(Math.random() * greetings.length)];\n  const request = requests[Math.floor(Math.random() * requests.length)];\n  const farewell = farewells[Math.floor(Math.random() * farewells.length)];\n\n  // Генерация сообщения\n  const message = `\n        ${greeting} ${request}\n        Заголовок баннера: <b>«${mail.title}»</b>.<br>\n        Текст баннера: <b>«${mail.text}»</b>\n        ${farewell}\n        <br><br>\n        От ${owner}.\n    `;\n  return message;\n}\n;\nfunction rand(a, b) {\n  return Math.floor(Math.random() * (b - a + 1) + a);\n}\nconst generatenName = () => {\n  return names[Math.floor(Math.random() * names.length)];\n};\nconst generateEmails = () => {\n  const emails = [];\n  for (let i = 0; i < 4; i++) {\n    const banner = banners[Math.floor(Math.random() * banners.length)];\n    const name = generatenName();\n    emails.push({\n      name: name,\n      time: `${rand(1, 30)} часа назад`,\n      text: generateAdvertisementRequest(banner, name),\n      cost: rand(0, 100),\n      isNew: true,\n      isBab: badBannerList.includes(banner)\n    });\n  }\n  return emails;\n};\nfunction Email() {\n  _s();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const emails = user.emails;\n  const setEmails = payload => dispatch(setEmailAction(payload));\n  useEffect(() => {\n    setEmails(generateEmails());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tab\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: emails.map((email, index) => /*#__PURE__*/_jsxDEV(EmailItem, {\n        ...email\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(Email, \"D+tpgEc7oJbenxkkKtcwSrPV108=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Email;\nexport default Email;\nvar _c;\n$RefreshReg$(_c, \"Email\");","map":{"version":3,"names":["React","useEffect","EmailItem","greetings","farewells","requests","names","bannerList","badBannerList","setEmail","setEmailAction","useSelector","useDispatch","jsxDEV","_jsxDEV","banners","generateAdvertisementRequest","mail","owner","greeting","Math","floor","random","length","request","farewell","message","title","text","rand","a","b","generatenName","generateEmails","emails","i","banner","name","push","time","cost","isNew","isBab","includes","Email","_s","dispatch","user","state","setEmails","payload","className","children","map","email","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/smerd/Desktop/Adtension/src/pages/Email.tsx"],"sourcesContent":["import React, { useState, useEffect, } from 'react';\r\nimport EmailItem from \"../components/EmailItem\";\r\nimport { greetings, farewells, requests, names } from \"../scripts/emailTemplates\";\r\nimport { bannerList, badBannerList } from \"../scripts/bannerTemplates\";\r\nimport { Email as EmailInterface, Banner, Anal, Rialto, Bot, } from '../scripts/types';\r\nimport { setEmail as setEmailAction,} from '../redux/user';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../redux/store';\r\n\r\nconst banners = [...bannerList, ...badBannerList];\r\n\r\nfunction generateAdvertisementRequest(mail: { title: string, text: string }, owner: string): string {\r\n    const greeting = greetings[Math.floor(Math.random() * greetings.length)];\r\n    const request = requests[Math.floor(Math.random() * requests.length)];\r\n    const farewell = farewells[Math.floor(Math.random() * farewells.length)];\r\n\r\n    // Генерация сообщения\r\n    const message = `\r\n        ${greeting} ${request}\r\n        Заголовок баннера: <b>«${mail.title}»</b>.<br>\r\n        Текст баннера: <b>«${mail.text}»</b>\r\n        ${farewell}\r\n        <br><br>\r\n        От ${owner}.\r\n    `;\r\n\r\n    return message;\r\n};\r\n\r\nfunction rand(a: number, b: number): number {\r\n    return Math.floor(Math.random() * (b - a + 1) + a);\r\n}\r\n\r\nconst generatenName = () => {\r\n    return names[Math.floor(Math.random() * names.length)];\r\n};\r\n\r\nconst generateEmails = (): Array<EmailInterface> => {\r\n    const emails = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const banner = banners[Math.floor(Math.random() * banners.length)];\r\n        const name = generatenName();\r\n\r\n        emails.push({\r\n            name: name,\r\n            time: `${ rand(1, 30) } часа назад`,\r\n            text: generateAdvertisementRequest(banner, name),\r\n            cost: rand(0, 100),\r\n            isNew: true,\r\n            isBab: badBannerList.includes(banner),\r\n        })\r\n    }\r\n    return emails;\r\n};\r\n\r\nfunction Email() {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector((state: RootState) => state.user);\r\n    const emails = user.emails;\r\n    const setEmails = (payload: Array<EmailInterface>) => dispatch(setEmailAction(payload));\r\n\r\n    useEffect(() => {\r\n        setEmails(generateEmails());\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"tab\">\r\n            <div>\r\n                {\r\n                    emails.map((email, index) => (\r\n                        <EmailItem\r\n                            key={index}\r\n                            {...email}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Email;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}