{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smerd\\\\Desktop\\\\Adtension\\\\src\\\\pages\\\\Email.tsx\";\nimport React from 'react';\nimport EmailItem from \"../components/EmailItem\";\nimport { greetings, farewells, requests } from \"../emailTemplates\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateAdvertisementRequest() {\n  const greeting = greetings[Math.floor(Math.random() * greetings.length)];\n  const request = requests[Math.floor(Math.random() * requests.length)];\n  const farewell = farewells[Math.floor(Math.random() * farewells.length)];\n  bannerTopic;\n  bannerText;\n\n  // Генерация сообщения\n  const message = `\n        ${greeting}. ${request}\n        Тема баннера: ${bannerTopic}\n        Текст баннера: ${bannerText}\n        <br>\n        ${farewell}\n    `;\n  return message;\n}\n;\nfunction rand(a, b) {\n  return Math.floor(Math.random() * (b - a + 1) + a);\n}\nconst generateEmails = () => {\n  const emails = [];\n  for (let i = 0; i < 4; i++) {\n    emails.push({\n      name: \"John Doe\",\n      time: \"2 hours ago\",\n      text: generateEmails(),\n      cost: rand(14, 80),\n      isNew: true\n    });\n  }\n  return emails;\n};\nfunction Email() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tab\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: emails.map((email, index) => /*#__PURE__*/_jsxDEV(EmailItem, {\n        ...email\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_c = Email;\nexport default Email;\nvar _c;\n$RefreshReg$(_c, \"Email\");","map":{"version":3,"names":["React","EmailItem","greetings","farewells","requests","jsxDEV","_jsxDEV","generateAdvertisementRequest","greeting","Math","floor","random","length","request","farewell","bannerTopic","bannerText","message","rand","a","b","generateEmails","emails","i","push","name","time","text","cost","isNew","Email","className","children","map","email","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/smerd/Desktop/Adtension/src/pages/Email.tsx"],"sourcesContent":["import React from 'react';\r\nimport EmailItem from \"../components/EmailItem\";\r\nimport { greetings, farewells, requests } from \"../emailTemplates\";\r\n\r\n\r\nfunction generateAdvertisementRequest(): string {\r\n    const greeting = greetings[Math.floor(Math.random() * greetings.length)];\r\n    const request = requests[Math.floor(Math.random() * requests.length)];\r\n    const farewell = farewells[Math.floor(Math.random() * farewells.length)];\r\n    bannerTopic\r\n    bannerText\r\n\r\n    // Генерация сообщения\r\n    const message = `\r\n        ${greeting}. ${request}\r\n        Тема баннера: ${bannerTopic}\r\n        Текст баннера: ${bannerText}\r\n        <br>\r\n        ${farewell}\r\n    `;\r\n\r\n    return message;\r\n};\r\n\r\nfunction rand(a: number, b: number): number {\r\n    return Math.floor(Math.random() * (b - a + 1) + a);\r\n}\r\n\r\nconst generateEmails = () => {\r\n    const emails = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        emails.push({\r\n            name: \"John Doe\",\r\n            time: \"2 hours ago\",\r\n            text: generateEmails(),\r\n            cost: rand(14, 80),\r\n            isNew: true,\r\n        })\r\n    }\r\n    return emails;\r\n};\r\n\r\n\r\nfunction Email() {\r\n    return (\r\n        <div className=\"tab\">\r\n            <div>\r\n                {\r\n                    emails.map((email, index) => (\r\n                        <EmailItem\r\n                            key={index}\r\n                            {...email}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Email;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnE,SAASC,4BAA4BA,CAAA,EAAW;EAC5C,MAAMC,QAAQ,GAAGN,SAAS,CAACO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGT,SAAS,CAACU,MAAM,CAAC,CAAC;EACxE,MAAMC,OAAO,GAAGT,QAAQ,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGP,QAAQ,CAACQ,MAAM,CAAC,CAAC;EACrE,MAAME,QAAQ,GAAGX,SAAS,CAACM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGR,SAAS,CAACS,MAAM,CAAC,CAAC;EACxEG,WAAW;EACXC,UAAU;;EAEV;EACA,MAAMC,OAAO,GAAI;AACrB,UAAUT,QAAS,KAAIK,OAAQ;AAC/B,wBAAwBE,WAAY;AACpC,yBAAyBC,UAAW;AACpC;AACA,UAAUF,QAAS;AACnB,KAAK;EAED,OAAOG,OAAO;AAClB;AAAC;AAED,SAASC,IAAIA,CAACC,CAAS,EAAEC,CAAS,EAAU;EACxC,OAAOX,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIS,CAAC,GAAGD,CAAC,GAAG,CAAC,CAAC,GAAGA,CAAC,CAAC;AACtD;AAEA,MAAME,cAAc,GAAGA,CAAA,KAAM;EACzB,MAAMC,MAAM,GAAG,EAAE;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACxBD,MAAM,CAACE,IAAI,CAAC;MACRC,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE,aAAa;MACnBC,IAAI,EAAEN,cAAc,CAAC,CAAC;MACtBO,IAAI,EAAEV,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC;MAClBW,KAAK,EAAE;IACX,CAAC,CAAC;EACN;EACA,OAAOP,MAAM;AACjB,CAAC;AAGD,SAASQ,KAAKA,CAAA,EAAG;EACb,oBACIxB,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAChB1B,OAAA;MAAA0B,QAAA,EAEQV,MAAM,CAACW,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACpB7B,OAAA,CAACL,SAAS;QAAA,GAEFiC;MAAK,GADJC,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACC,EAAA,GAfQV,KAAK;AAiBd,eAAeA,KAAK;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}