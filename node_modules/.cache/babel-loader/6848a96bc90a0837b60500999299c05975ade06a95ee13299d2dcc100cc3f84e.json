{"ast":null,"code":"import { greetings, farewells, requests, names } from \"./emailTemplates\";\nimport { bannerList, badBannerList } from \"./bannerTemplates\";\nexport function rand(a, b) {\n  return Math.floor(Math.random() * (b - a + 1) + a);\n}\nexport const generatenName = () => {\n  return names[Math.floor(Math.random() * names.length)];\n};\nconst banners = [...bannerList, ...badBannerList];\nexport function generateAdvertisementRequest(mail, owner) {\n  const greeting = greetings[Math.floor(Math.random() * greetings.length)];\n  const request = requests[Math.floor(Math.random() * requests.length)];\n  const farewell = farewells[Math.floor(Math.random() * farewells.length)];\n\n  // Генерация сообщения\n  const message = `\n        ${greeting} ${request}\n        Заголовок баннера: <b>«${mail.title}»</b>.<br>\n        Текст баннера: <b>«${mail.text}»</b>\n        ${farewell}\n        <br><br>\n        От ${owner}.\n    `;\n  return message;\n}\n;\nexport const generateEmail = () => {\n  const banner = banners[Math.floor(Math.random() * banners.length)];\n  const name = generatenName();\n  return {\n    name: name,\n    time: `${rand(1, 30)} часа назад`,\n    messageText: generateAdvertisementRequest(banner, name),\n    text: banner.text,\n    title: banner.title,\n    price: rand(1, 8),\n    isNew: true,\n    isBab: badBannerList.includes(banner),\n    isDisable: false\n  };\n};","map":{"version":3,"names":["greetings","farewells","requests","names","bannerList","badBannerList","rand","a","b","Math","floor","random","generatenName","length","banners","generateAdvertisementRequest","mail","owner","greeting","request","farewell","message","title","text","generateEmail","banner","name","time","messageText","price","isNew","isBab","includes","isDisable"],"sources":["C:/Users/smerd/Desktop/Adtension/src/scripts/emailGenerate.ts"],"sourcesContent":["import { Email as EmailInterface, Banner as BannerInterface, Anal, Rialto, Bot, } from './types';\r\nimport { greetings, farewells, requests, names } from \"./emailTemplates\";\r\nimport { bannerList, badBannerList } from \"./bannerTemplates\";\r\n\r\nexport function rand(a: number, b: number): number {\r\n    return Math.floor(Math.random() * (b - a + 1) + a);\r\n}\r\n\r\nexport const generatenName = () => {\r\n    return names[Math.floor(Math.random() * names.length)];\r\n};\r\n\r\nconst banners = [...bannerList, ...badBannerList];\r\n\r\nexport function generateAdvertisementRequest(mail: { title: string, text: string }, owner: string): string {\r\n    const greeting = greetings[Math.floor(Math.random() * greetings.length)];\r\n    const request = requests[Math.floor(Math.random() * requests.length)];\r\n    const farewell = farewells[Math.floor(Math.random() * farewells.length)];\r\n\r\n    // Генерация сообщения\r\n    const message = `\r\n        ${greeting} ${request}\r\n        Заголовок баннера: <b>«${mail.title}»</b>.<br>\r\n        Текст баннера: <b>«${mail.text}»</b>\r\n        ${farewell}\r\n        <br><br>\r\n        От ${owner}.\r\n    `;\r\n\r\n    return message;\r\n};\r\n\r\nexport const generateEmail= (): EmailInterface => {\r\n    const banner = banners[Math.floor(Math.random() * banners.length)];\r\n    const name = generatenName();\r\n\r\n    return {\r\n        name: name,\r\n        time: `${ rand(1, 30) } часа назад`,\r\n        messageText: generateAdvertisementRequest(banner, name),\r\n        text: banner.text,\r\n        title: banner.title,\r\n        price: rand(1, 8),\r\n        isNew: true,\r\n        isBab: badBannerList.includes(banner),\r\n        isDisable: false,\r\n    }\r\n};"],"mappings":"AACA,SAASA,SAAS,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,kBAAkB;AACxE,SAASC,UAAU,EAAEC,aAAa,QAAQ,mBAAmB;AAE7D,OAAO,SAASC,IAAIA,CAACC,CAAS,EAAEC,CAAS,EAAU;EAC/C,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIH,CAAC,GAAGD,CAAC,GAAG,CAAC,CAAC,GAAGA,CAAC,CAAC;AACtD;AAEA,OAAO,MAAMK,aAAa,GAAGA,CAAA,KAAM;EAC/B,OAAOT,KAAK,CAACM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGR,KAAK,CAACU,MAAM,CAAC,CAAC;AAC1D,CAAC;AAED,MAAMC,OAAO,GAAG,CAAC,GAAGV,UAAU,EAAE,GAAGC,aAAa,CAAC;AAEjD,OAAO,SAASU,4BAA4BA,CAACC,IAAqC,EAAEC,KAAa,EAAU;EACvG,MAAMC,QAAQ,GAAGlB,SAAS,CAACS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGX,SAAS,CAACa,MAAM,CAAC,CAAC;EACxE,MAAMM,OAAO,GAAGjB,QAAQ,CAACO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGT,QAAQ,CAACW,MAAM,CAAC,CAAC;EACrE,MAAMO,QAAQ,GAAGnB,SAAS,CAACQ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGV,SAAS,CAACY,MAAM,CAAC,CAAC;;EAExE;EACA,MAAMQ,OAAO,GAAI;AACrB,UAAUH,QAAS,IAAGC,OAAQ;AAC9B,iCAAiCH,IAAI,CAACM,KAAM;AAC5C,6BAA6BN,IAAI,CAACO,IAAK;AACvC,UAAUH,QAAS;AACnB;AACA,aAAaH,KAAM;AACnB,KAAK;EAED,OAAOI,OAAO;AAClB;AAAC;AAED,OAAO,MAAMG,aAAa,GAAEA,CAAA,KAAsB;EAC9C,MAAMC,MAAM,GAAGX,OAAO,CAACL,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGG,OAAO,CAACD,MAAM,CAAC,CAAC;EAClE,MAAMa,IAAI,GAAGd,aAAa,CAAC,CAAC;EAE5B,OAAO;IACHc,IAAI,EAAEA,IAAI;IACVC,IAAI,EAAG,GAAGrB,IAAI,CAAC,CAAC,EAAE,EAAE,CAAG,aAAY;IACnCsB,WAAW,EAAEb,4BAA4B,CAACU,MAAM,EAAEC,IAAI,CAAC;IACvDH,IAAI,EAAEE,MAAM,CAACF,IAAI;IACjBD,KAAK,EAAEG,MAAM,CAACH,KAAK;IACnBO,KAAK,EAAEvB,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IACjBwB,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE1B,aAAa,CAAC2B,QAAQ,CAACP,MAAM,CAAC;IACrCQ,SAAS,EAAE;EACf,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}