{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smerd\\\\Desktop\\\\Adtension\\\\src\\\\components\\\\Banner.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { ResizableBox } from \"react-resizable\";\nimport Info from '../components/Info';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction rand(a, b) {\n  return Math.floor(Math.random() * (b - a + 1) + a);\n}\nfunction isVerticalOverlap({\n  y: y1,\n  height: height1\n}, {\n  y: y2,\n  height: height2\n}) {\n  return y1 < y2 + height2 && y1 + height1 > y2;\n}\nfunction isHorizontalOverlap({\n  x: x1,\n  width: width1\n}, {\n  x: x2,\n  width: width2\n}) {\n  return x1 < x2 + width2 && x1 + width1 > x2;\n}\nconst Banner = ({\n  index,\n  color,\n  x,\n  y,\n  title,\n  text,\n  width,\n  height,\n  fontType,\n  price,\n  onUpdateBannerX,\n  onUpdateBannerY,\n  onUpdateBannerWidth,\n  onUpdateBannerHeight\n}) => {\n  _s();\n  const [isEdit, setIsEdit] = useState(false);\n  const [random, setRandom] = useState(rand(1, 11));\n  const [bounds, setBounds] = useState({\n    top: 0,\n    left: 0,\n    right: window.innerWidth - 200,\n    bottom: window.innerHeight - 300\n  });\n  const bannerClasses = `p-4 border border-black rounded-xl h-full ad ad-${fontType || random} ${isEdit ? 'edit-banner border-dashed border-2' : 'border-solid'}`;\n  const stopHandler = (_, ui) => {\n    onUpdateBannerX(ui.x);\n    onUpdateBannerY(ui.y);\n  };\n  const startHandler = () => {\n    const blocks = document.querySelectorAll('.ad, .news');\n    let top = 0;\n    let left = 0;\n    let right = window.innerWidth - 200;\n    let bottom = window.innerHeight - 300;\n    for (let block of blocks) {\n      if (true) {}\n      const mainBlock = {\n        x,\n        y,\n        width,\n        height\n      };\n      const extraBlock = block.getBoundingClientRect();\n      if (isHorizontalOverlap(mainBlock, extraBlock)) {\n        if (mainBlock.y < extraBlock.y) {\n          bottom = Math.min(bottom, extraBlock.y);\n        } else {\n          top = Math.max(top, extraBlock.y);\n        }\n      }\n      if (isVerticalOverlap(mainBlock, extraBlock)) {\n        if (mainBlock.x < extraBlock.x) {\n          right = Math.min(right, extraBlock.x);\n        } else {\n          left = Math.max(left, extraBlock.x + extraBlock.width);\n        }\n      }\n    }\n    setBounds({\n      top,\n      left,\n      right,\n      bottom\n    });\n  };\n  const handleResize = (_, {\n    size\n  }) => {\n    onUpdateBannerWidth(size.width);\n    onUpdateBannerHeight(size.height);\n  };\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    onStop: stopHandler,\n    onStart: startHandler,\n    scale: 1,\n    defaultPosition: {\n      x,\n      y\n    },\n    handle: isEdit ? '#nothing' : undefined,\n    bounds: bounds,\n    children: /*#__PURE__*/_jsxDEV(ResizableBox, {\n      onResize: handleResize,\n      width: width,\n      height: height,\n      minConstraints: [150, 150],\n      maxConstraints: [400, 250],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: bannerClasses,\n        style: {\n          background: color\n        },\n        \"data-price\": price,\n        onDoubleClick: () => setIsEdit(!isEdit),\n        onClick: () => setIsEdit(false),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-white text-lg font-semibold\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), isEdit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Info, {\n              income: price,\n              reputation: -1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `handle`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(Banner, \"wZ1eirt0xDlJcb2s8Pf7YFh0oQ0=\");\n_c = Banner;\nexport default Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useState","Draggable","ResizableBox","Info","jsxDEV","_jsxDEV","Fragment","_Fragment","rand","a","b","Math","floor","random","isVerticalOverlap","y","y1","height","height1","y2","height2","isHorizontalOverlap","x","x1","width","width1","x2","width2","Banner","index","color","title","text","fontType","price","onUpdateBannerX","onUpdateBannerY","onUpdateBannerWidth","onUpdateBannerHeight","_s","isEdit","setIsEdit","setRandom","bounds","setBounds","top","left","right","window","innerWidth","bottom","innerHeight","bannerClasses","stopHandler","_","ui","startHandler","blocks","document","querySelectorAll","block","mainBlock","extraBlock","getBoundingClientRect","min","max","handleResize","size","onStop","onStart","scale","defaultPosition","handle","undefined","children","onResize","minConstraints","maxConstraints","className","style","background","onDoubleClick","onClick","fileName","_jsxFileName","lineNumber","columnNumber","income","reputation","_c","$RefreshReg$"],"sources":["C:/Users/smerd/Desktop/Adtension/src/components/Banner.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport { Resizable, ResizableBox } from \"react-resizable\";\r\nimport { Banner as BannerInterface } from '../scripts/types';\r\nimport Info from '../components/Info';\r\n\r\ninterface BannerProps extends BannerInterface {\r\n    index: number,\r\n    onUpdateBannerX: (val: number) => void,\r\n    onUpdateBannerY: (val: number) => void,\r\n    onUpdateBannerWidth: (val: number) => void,\r\n    onUpdateBannerHeight: (val: number) => void,\r\n}\r\n\r\nfunction rand (a:number, b: number): number {\r\n    return Math.floor(Math.random() * (b - a + 1) + a);\r\n}\r\n\r\nfunction isVerticalOverlap({y: y1, height: height1}: { y: number, height: number }, {y: y2, height: height2 }: { y: number, height: number }) {\r\n    return (y1 < y2 + height2) && (y1 + height1 > y2);\r\n}\r\n\r\nfunction isHorizontalOverlap({x: x1, width: width1}: { x: number, width: number }, {x: x2, width: width2 }: { x: number, width: number }) {\r\n    return (x1 < x2 + width2) && (x1 + width1 > x2);\r\n}\r\n\r\nconst Banner: React.FC<BannerProps> = ({\r\n    index,\r\n    color,\r\n    x,\r\n    y,\r\n    title,\r\n    text,\r\n    width,\r\n    height,\r\n    fontType,\r\n    price,\r\n    onUpdateBannerX,\r\n    onUpdateBannerY,\r\n    onUpdateBannerWidth,\r\n    onUpdateBannerHeight,\r\n}) => {\r\n    const [ isEdit, setIsEdit ] = useState(false);\r\n    const [ random, setRandom ] = useState(rand(1, 11));\r\n    const [ bounds, setBounds ] = useState({\r\n        top: 0,\r\n        left: 0,\r\n        right: window.innerWidth - 200,\r\n        bottom: window.innerHeight - 300,\r\n    });\r\n\r\n    const bannerClasses = `p-4 border border-black rounded-xl h-full ad ad-${ fontType || random } ${ isEdit ? 'edit-banner border-dashed border-2' : 'border-solid' }`;\r\n\r\n    const stopHandler = (_: any, ui: {x: number, y: number}) => {\r\n        onUpdateBannerX(ui.x);\r\n        onUpdateBannerY(ui.y);\r\n    };\r\n\r\n    const startHandler = () => {\r\n        const blocks = document.querySelectorAll('.ad, .news') as NodeListOf<HTMLDivElement>;\r\n        let top = 0;\r\n        let left = 0;\r\n        let right = window.innerWidth - 200;\r\n        let bottom = window.innerHeight - 300;\r\n        for (let block of blocks) {\r\n            if (true) {\r\n\r\n            }\r\n            const mainBlock = { x, y, width, height };\r\n            const extraBlock = block.getBoundingClientRect();\r\n            if (isHorizontalOverlap(mainBlock, extraBlock)) {\r\n                if (mainBlock.y < extraBlock.y) {\r\n                    bottom = Math.min(bottom, extraBlock.y)\r\n                } else {\r\n                    top = Math.max(top, extraBlock.y)\r\n                }\r\n            }\r\n\r\n            if (isVerticalOverlap(mainBlock, extraBlock)) {\r\n                if (mainBlock.x < extraBlock.x) {\r\n                    right = Math.min(right, extraBlock.x)\r\n                } else {\r\n                    left = Math.max(left, extraBlock.x + extraBlock.width);\r\n                }\r\n            }\r\n        }\r\n        setBounds({ top, left, right, bottom, });\r\n    };\r\n\r\n    const handleResize = (_: any, { size }: { size: { width: number, height: number }}) => {\r\n        onUpdateBannerWidth(size.width);\r\n        onUpdateBannerHeight(size.height);\r\n    };\r\n\r\n    return (\r\n        <Draggable\r\n            onStop={stopHandler}\r\n            onStart={startHandler}\r\n            scale={1}\r\n            defaultPosition={{x, y}}\r\n            handle={isEdit ? '#nothing' : undefined}\r\n            bounds={bounds}\r\n        >\r\n            <ResizableBox\r\n                onResize={handleResize}\r\n                width={width}\r\n                height={height}\r\n                minConstraints={[150, 150]}\r\n                maxConstraints={[400, 250]}\r\n            >\r\n                <div\r\n                    className={bannerClasses}\r\n                    style={{\r\n                        background: color,\r\n                    }}\r\n                    data-price={price}\r\n                    onDoubleClick={() => setIsEdit(!isEdit)}\r\n                    onClick={() => setIsEdit(false)}\r\n                >\r\n                    <div className=\"flex justify-between\">\r\n                        <h2 className=\"text-white text-lg font-semibold\">\r\n                            { title }\r\n                        </h2>\r\n                        {\r\n                            isEdit ?\r\n                            <>\r\n                            <Info\r\n                                income={price}\r\n                                reputation={-1}\r\n                            />\r\n                            <div\r\n                                className={`handle`}\r\n                            />\r\n                            </>\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                    <p className=\"text-white\">\r\n                        { text }\r\n                    </p>\r\n                </div>\r\n            </ResizableBox>\r\n        </Draggable>\r\n    );\r\n};\r\n\r\nexport default Banner;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}